(this["webpackJsonpr3f-sparks"]=this["webpackJsonpr3f-sparks"]||[]).push([[0],{19:function(e,t,r){},30:function(e,t,r){e.exports=r(40)},39:function(e,t,r){},40:function(e,t,r){"use strict";r.r(t);var n=r(5),a=r(1),o=r(11),i=r.n(o),s=r(0),c=r.n(s),l=r(6),u=r(7),m=r.n(u),h=r(26);var f=Object(s.forwardRef)((e,t)=>{let r=e.children,n=e.vAlign,o=void 0===n?"center":n,i=e.hAlign,u=void 0===i?"center":i,m=e.size,f=void 0===m?1:m,d=(e.color,Object(h.a)(e,["children","vAlign","hAlign","size","color"]));const v=Object(l.d)(a.FontLoader,"".concat("/demo3D","/Cyberpunk_Regular.json")),p=Object(s.useMemo)(()=>({font:v,size:5,height:3}),[v]),g=Object(l.f)(e=>{const t=new a.Vector3;e.geometry.computeBoundingBox(),e.geometry.boundingBox.getSize(t),e.position.x="center"===u?-t.x/2:"right"===u?0:-t.x,e.position.y="center"===o?-t.y/2:"top"===o?0:-t.y},[r]);return c.a.createElement("group",Object.assign({ref:t},d,{scale:[.1*f,.1*f,.3]}),c.a.createElement("mesh",{ref:g},c.a.createElement("textGeometry",{attach:"geometry",args:[r,p]}),c.a.createElement("meshNormalMaterial",{attach:"material"})))}),d=r(27),v=r(13),p=r(24),g=r(28),y=r(29),x=r(3),b={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:"varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }",fragmentShader:"uniform int byp; //should we apply the glitch\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDisp;\n    uniform float amount;\n    uniform float angle;\n    uniform float seed;\n    uniform float seed_x;\n    uniform float seed_y;\n    uniform float distortion_x;\n    uniform float distortion_y;\n    uniform float col_s;\n    varying vec2 vUv;\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n      if(byp<1) {\n        vec2 p = vUv;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        vec4 normal = texture2D (tDisp, p*seed*seed);\n        if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n          if(seed_x>0.){\n            p.y = 1. - (p.y + distortion_y);\n          }\n          else {\n            p.y = distortion_y;\n          }\n        }\n        p.x+=normal.x*seed_x*(seed/5.);\n        p.y+=normal.y*seed_y*(seed/5.);\n        //base from RGB shift shader\n        vec2 offset = amount * vec2( cos(angle), sin(angle));\n        vec4 cr = texture2D(tDiffuse, p + offset);\n        vec4 cga = texture2D(tDiffuse, p);\n        vec4 cb = texture2D(tDiffuse, p - offset);\n        gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n      }\n      else {\n        gl_FragColor=texture2D (tDiffuse, vUv);\n      }\n    }"},M=function(e){x.a.call(this),void 0===b&&console.error("THREE.GlitchPass relies on THREE.DigitalGlitch");var t=b;this.uniforms=a.UniformsUtils.clone(t.uniforms),void 0===e&&(e=64),this.uniforms.tDisp.value=this.generateHeightmap(e),this.material=new a.ShaderMaterial({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.factor=0};M.prototype=Object.assign(Object.create(x.a.prototype),{constructor:M,render:function(e,t,r,n,o){const i=Math.max(0,this.factor);this.uniforms.tDiffuse.value=r.texture,this.uniforms.seed.value=Math.random()*i,this.uniforms.byp.value=0,i?(this.uniforms.amount.value=Math.random()/90*i,this.uniforms.angle.value=a.Math.randFloat(-Math.PI,Math.PI)*i,this.uniforms.distortion_x.value=a.Math.randFloat(0,1)*i,this.uniforms.distortion_y.value=a.Math.randFloat(0,1)*i,this.uniforms.seed_x.value=a.Math.randFloat(-.3,.3)*i,this.uniforms.seed_y.value=a.Math.randFloat(-.3,.3)*i):this.uniforms.byp.value=1,this.quad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),e.render(this.scene,this.camera)):(e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera))},generateHeightmap:function(e){for(var t=new Float32Array(e*e*3),r=e*e,n=0;n<r;n++){var o=a.Math.randFloat(0,1);t[3*n+0]=o,t[3*n+1]=o,t[3*n+2]=o}var i=new a.DataTexture(t,e,e,a.RGBFormat,a.FloatType);return i.needsUpdate=!0,i}});var w={uniforms:{byp:{value:0},texture:{type:"t",value:null},time:{type:"f",value:0},factor:{type:"f",value:0},resolution:{type:"v2",value:null}},vertexShader:"varying vec2 vUv;\n    void main(){  \n      vUv = uv; \n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_Position = projectionMatrix * modelViewPosition;\n    }",fragmentShader:"uniform int byp; //should we apply the glitch ?\n    uniform float time;\n    uniform float factor;\n    uniform vec2 resolution;\n    uniform sampler2D texture;\n    \n    varying vec2 vUv;\n    \n    void main() {  \n      if (byp<1) {\n        vec2 uv1 = vUv;\n        vec2 uv = gl_FragCoord.xy/resolution.xy;\n        float frequency = 6.0;\n        float amplitude = 0.015 * factor;\n        float x = uv1.y * frequency + time * .7; \n        float y = uv1.x * frequency + time * .3;\n        uv1.x += cos(x+y) * amplitude * cos(y);\n        uv1.y += sin(x-y) * amplitude * cos(y);\n        vec4 rgba = texture2D(texture, uv1);\n        gl_FragColor = rgba;\n      } else {\n        gl_FragColor = texture2D(texture, vUv);\n      }\n    }"},E=function(e){x.a.call(this),void 0===w&&console.error("THREE.WaterPass relies on THREE.WaterShader");var t=w;this.uniforms=a.UniformsUtils.clone(t.uniforms),void 0===e&&(e=64),this.uniforms.resolution.value=new a.Vector2(e,e),this.material=new a.ShaderMaterial({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.factor=0,this.time=0};function O({down:e}){const t=Object(s.useRef)(),r=Object(l.e)(),n=r.scene,o=r.gl,i=r.size,u=r.camera,m=Object(s.useMemo)(()=>new a.Vector2(512,512),[]);return Object(s.useEffect)(()=>{t.current.setSize(i.width,i.height)},[i]),Object(l.c)(()=>t.current.render(),1),c.a.createElement("effectComposer",{ref:t,args:[o]},c.a.createElement("renderPass",{attachArray:"passes",scene:n,camera:u}),c.a.createElement("waterPass",{attachArray:"passes",factor:1.5}),c.a.createElement("unrealBloomPass",{attachArray:"passes",args:[m,2,1,0]}),c.a.createElement("glitchPass",{attachArray:"passes",factor:e?1:0}))}E.prototype=Object.assign(Object.create(x.a.prototype),{constructor:E,render:function(e,t,r,n,a){const o=Math.max(0,this.factor);this.uniforms.byp.value=o?0:1,this.uniforms.texture.value=r.texture,this.uniforms.time.value=this.time,this.uniforms.factor.value=this.factor,this.time+=.05,this.quad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),e.render(this.scene,this.camera)):(e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera))}}),Object(l.b)({EffectComposer:d.a,ShaderPass:v.a,RenderPass:p.a,WaterPass:E,UnrealBloomPass:g.a,FilmPass:y.a,GlitchPass:M});var j=r(25);Object(l.b)(j);const _=()=>Math.max(.2,Math.random());function P({curve:e,width:t,color:r,speed:n}){const a=Object(s.useRef)();return Object(l.c)(()=>a.current.uniforms.dashOffset.value-=n),c.a.createElement("mesh",null,c.a.createElement("meshLine",{attach:"geometry",vertices:e}),c.a.createElement("meshLineMaterial",{attach:"material",ref:a,transparent:!0,depthTest:!1,lineWidth:t,color:r,dashArray:.1,dashRatio:.95}))}function F({mouse:e,count:t,colors:r,radius:n=10}){const o=Object(s.useMemo)(()=>new Array(t).fill().map((e,t)=>{const o=new a.Vector3(Math.sin(0)*n*_(),Math.cos(0)*n*_(),0),i=new Array(30).fill().map((e,t)=>{const r=t/20*Math.PI*2;return o.add(new a.Vector3(Math.sin(r)*n*_(),Math.cos(r)*n*_(),0)).clone()}),s=new a.CatmullRomCurve3(i).getPoints(1e3);return{color:r[parseInt(r.length*Math.random())],width:Math.max(.1,.2*t/10),speed:Math.max(.001,.004*Math.random()),curve:s}}),[t]),i=Object(s.useRef)(),u=Object(l.e)(),h=u.size,f=u.viewport,d=h.width/f.width;return Object(l.c)(()=>{i.current&&(i.current.rotation.x=m()(i.current.rotation.x,0+e.current[1]/d/200,.1),i.current.rotation.y=m()(i.current.rotation.y,0+e.current[0]/d/400,.1))}),c.a.createElement("group",{ref:i},c.a.createElement("group",{position:[2*-n,-n,-10],scale:[1,1.3,1]},o.map((e,t)=>c.a.createElement(P,Object.assign({key:t},e)))))}r(19);function D({count:e,mouse:t}){const r=Object(s.useRef)(),n=Object(s.useRef)(),o=Object(l.e)(),i=o.size,u=o.viewport,m=i.width/u.width,h=Object(s.useMemo)(()=>new a.Object3D,[]),f=Object(s.useMemo)(()=>{const t=[];for(let r=0;r<e;r++){const e=100*Math.random(),r=20+100*Math.random(),n=.01+Math.random()/200,a=100*Math.random()-50,o=100*Math.random()-50,i=100*Math.random()-50;t.push({t:e,factor:r,speed:n,xFactor:a,yFactor:o,zFactor:i,mx:0,my:0})}return t},[e]);return Object(l.c)(e=>{n.current.position.set(t.current[0]/m,-t.current[1]/m,0),f.forEach((e,n)=>{let a=e.t,o=e.factor,i=e.speed,s=e.xFactor,c=e.yFactor,l=e.zFactor;a=e.t+=i/2;const u=Math.cos(a)+Math.sin(1*a)/10,m=Math.sin(a)+Math.cos(2*a)/10,f=Math.cos(a);e.mx+=.01*(t.current[0]-e.mx),e.my+=.01*(-1*t.current[1]-e.my),h.position.set(e.mx/10*u+s+Math.cos(a/10*o)+Math.sin(1*a)*o/10,e.my/10*m+c+Math.sin(a/10*o)+Math.cos(2*a)*o/10,e.my/10*m+l+Math.cos(a/10*o)+Math.sin(3*a)*o/10),h.scale.set(f,f,f),h.rotation.set(5*f,5*f,5*f),h.updateMatrix(),r.current.setMatrixAt(n,h.matrix)}),r.current.instanceMatrix.needsUpdate=!0}),c.a.createElement(c.a.Fragment,null,c.a.createElement("pointLight",{ref:n,distance:40,intensity:8,color:"lightblue"}),c.a.createElement("instancedMesh",{ref:r,args:[null,null,e]},c.a.createElement("dodecahedronBufferGeometry",{attach:"geometry",args:[.2,0]}),c.a.createElement("meshPhongMaterial",{attach:"material",color:"#050505"})))}var C=r(16);r(39);const S=(e,t)=>[-(t-window.innerHeight/2)/200,(e-window.innerWidth/2)/200,1.1],R=(e,t,r)=>"perspective(600px) rotateX(".concat(e,"deg) rotateY(").concat(t,"deg) scale(").concat(r,")");var U=function(){const e=Object(C.b)(()=>({xys:[0,0,1],config:{mass:15,tension:350,friction:40}})),t=Object(n.a)(e,2),r=t[0],a=t[1];return c.a.createElement(C.a.div,{className:"panel",onMouseMove:({clientX:e,clientY:t})=>a({xys:S(e,t)}),onMouseLeave:()=>a({xys:[0,0,1]}),style:{transform:r.xys.interpolate(R)}})};function A({mouse:e,hover:t}){const r=Object(s.useRef)(),n=Object(l.e)(),a=n.size,o=n.viewport,i=a.width/o.width;return Object(l.c)(t=>{r.current&&(r.current.position.x=m()(r.current.position.x,e.current[0]/i/10,.1),r.current.rotation.x=m()(r.current.rotation.x,0+e.current[1]/i/50,.1),r.current.rotation.y=m()(r.current.position.y,e.current[0]/i/10,.1),r.current.rotation.y=m()(r.current.rotation.y,0+e.current[1]/i/50,.1))}),c.a.createElement(s.Suspense,{fallback:null},c.a.createElement("group",{ref:r},c.a.createElement(f,{size:10,onClick:e=>window.open("https://github.com/react-spring/react-three-fiber/blob/master/whatsnew.md","_blank"),onPointerOver:()=>t(!0),onPointerOut:()=>t(!1)},"NINO")))}function T(){const e=Object(s.useState)(!1),t=Object(n.a)(e,2),r=t[0],o=t[1],i=Object(s.useState)(!1),u=Object(n.a)(i,2),m=u[0],h=u[1],f=Object(s.useRef)([0,0]),d=Object(s.useCallback)(({clientX:e,clientY:t})=>f.current=[e-window.innerWidth/2,t-window.innerHeight/2],[]),v=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent);return Object(s.useEffect)(()=>{document.body.style.cursor=r?"pointer":"url('https://raw.githubusercontent.com/chenglou/react-motion/master/demos/demo8-draggable-list/cursor.png') 39 39, auto"},[r]),c.a.createElement(c.a.Fragment,null,c.a.createElement(l.a,{pixelRatio:Math.min(2,v?window.devicePixelRatio:1),camera:{fov:100,position:[0,0,30]},onMouseMove:d,onMouseUp:()=>h(!1),onMouseDown:()=>h(!0),onCreated:({gl:e})=>{e.toneMapping=a.Uncharted2ToneMapping,e.setClearColor(new a.Color("#020303"))}},c.a.createElement("fog",{attach:"fog",args:["white",50,190]}),c.a.createElement("pointLight",{distance:100,intensity:2,color:"white"}),c.a.createElement(A,{mouse:f,hover:o}),c.a.createElement(D,{count:v?5e3:1e4,mouse:f}),c.a.createElement(F,{count:20,mouse:f,colors:["#A2CCB6","#FCEEB5","#EE786E","#e0feff","lightpink","lightblue"]}),c.a.createElement(O,{down:m})),c.a.createElement(U,null))}i.a.render(c.a.createElement(T,null),document.getElementById("root"))}},[[30,1,2]]]);
//# sourceMappingURL=main.535985ff.chunk.js.map